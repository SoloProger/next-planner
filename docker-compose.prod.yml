version: "3.8"
services:

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    networks:
      - strapi
    ports:
      - 80:80
    depends_on:
      - strapi

  strapi:
    container_name: strapi
    build:
      context: admin
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./admin/config:/opt/app/config
      - ./admin/src:/opt/app/src
      - ./admin/package.json:/opt/package.json
      - ./admin/yarn.lock:/opt/yarn.lock
      - ./admin/.env:/opt/app/.env
      - ./admin/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    restart: always
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./db-prod:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    networks:
      - strapi

networks:
  strapi:
    name: Strapi
    driver: bridge
